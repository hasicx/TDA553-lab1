classDiagram

  class Direction {
    <<enum>>
    NORTH
    EAST
    SOUTH
    WEST
  }

  class Transportable {
    <<interface>>
    #setPosition(double x, double y)
  }

  class Movable{
    <<interface>>
    turnLeft() void
    turnRight() void
    move() void
  }

  class Vehicle{
    <<abstract>>
    +move() void
  }

  class TransportVehicle {
    <<abstract>>
    #initializeLift() void*
    #setLiftAngleToTilted() void*
    #restoreLiftAngle() void*
    #platformIsTilted() boolean*
    +enableTiltedMode() void
    +disableTiltedMode() void
  }

  class CarCarrier {
    <<abstract>>
    -Deque~Transportable~ deck
    -isInProximity(Vehicle) boolean
    #initializeDeck() void*
    +move() void
    +load(Transportable) void
    +unload() Transportable
    +getNumObjectsOnDeck() int
  }

  class Cottrell {
    #initializeDeck() void
  }

  class Truck {
    <<abstract>>
    setLiftAngle(int) void
  }

  class Scania {
  }

  class Lift {
    -int maxAngle
    -int minAngle
    -int currentAngle
    +setAngle(int) void
    +setToMaxAngle() void
    +setToMinAngle() void
  }

  class Car {
    <<abstract>>
  }

  class TrimmedCar {
    <<abstract>>
  }

  class TurboCar {
    <<abstract>>
  }

  class Volvo240 {
  }

  class Saab95 {
  }


Vehicle --> Direction
Vehicle ..|> Movable
Vehicle <|-- TransportVehicle
Vehicle <|-- Car
TransportVehicle <|-- Truck
TransportVehicle <|-- CarCarrier
TransportVehicle *.. Lift
Truck <|-- Scania
CarCarrier <|-- Cottrell
CarCarrier "1" --> "0..n" Transportable
Car ..|> Transportable
Car <|-- TrimmedCar
Car <|-- TurboCar
TrimmedCar <|-- Volvo240
TurboCar <|-- Saab95